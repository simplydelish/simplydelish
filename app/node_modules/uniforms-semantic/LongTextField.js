'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _connectField = require('uniforms/connectField');

var _connectField2 = _interopRequireDefault(_connectField);

var _filterDOMProps = require('uniforms/filterDOMProps');

var _filterDOMProps2 = _interopRequireDefault(_filterDOMProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LongText = function LongText(_ref) {
    var className = _ref.className,
        disabled = _ref.disabled,
        error = _ref.error,
        errorMessage = _ref.errorMessage,
        id = _ref.id,
        inputRef = _ref.inputRef,
        label = _ref.label,
        name = _ref.name,
        _onChange = _ref.onChange,
        placeholder = _ref.placeholder,
        required = _ref.required,
        showInlineError = _ref.showInlineError,
        value = _ref.value,
        props = (0, _objectWithoutProperties3.default)(_ref, ['className', 'disabled', 'error', 'errorMessage', 'id', 'inputRef', 'label', 'name', 'onChange', 'placeholder', 'required', 'showInlineError', 'value']);
    return _react2.default.createElement(
        'div',
        (0, _extends3.default)({ className: (0, _classnames2.default)(className, { disabled: disabled, error: error, required: required }, 'field') }, (0, _filterDOMProps2.default)(props)),
        label && _react2.default.createElement(
            'label',
            { htmlFor: id },
            label
        ),
        _react2.default.createElement('textarea', {
            disabled: disabled,
            id: id,
            name: name,
            onChange: function onChange(event) {
                return _onChange(event.target.value);
            },
            placeholder: placeholder,
            ref: inputRef,
            value: value
        }),
        !!(error && showInlineError) && _react2.default.createElement(
            'div',
            { className: 'ui red basic pointing label' },
            errorMessage
        )
    );
};

exports.default = (0, _connectField2.default)(LongText);